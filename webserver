from flask import Flask, jsonify
from threading import Thread
import os
import time

app = Flask(__name__)

# Contador de tiempo de actividad
start_time = time.time()

@app.route('/')
def home():
    """Endpoint principal para UptimeRobot"""
    return jsonify({
        "status": "online",
        "uptime": time.time() - start_time,
        "message": "üü¢ Bot de Discord est√° en l√≠nea!"
    }), 200

@app.route('/health')
def health_check():
    """Endpoint adicional para verificaciones de salud"""
    return jsonify({"status": "healthy"}), 200

def run():
    port = int(os.environ.get('PORT', 8080))
    app.run(host='0.0.0.0', port=port)

def keep_alive():
    """Inicia el servidor web en segundo plano"""
    server = Thread(target=run)
    server.daemon = True  # Se cerrar√° cuando el proceso principal termine
    server.start()